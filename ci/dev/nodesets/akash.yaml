apiVersion: apps.starport.cloud/v1
kind: NodeSet
metadata:
  name: akash
  namespace: emeris
spec:
  app:
    cliName: akash
    daemonName: akash
    name: akash
  config:
    additionalEgressRules:
      - ports:
          - port: 26257
            protocol: TCP
    nodes:
      startupTimeout: 1h
      traceStoreContainer:
        env:
          - name: TRACELISTENER_FIFOPATH
            value: /trace-store/kvstore.fifo
          - name: TRACELISTENER_DATABASECONNECTIONURL
            value: postgres://root@cockroachdb-public:26257?sslmode=disable
          - name: TRACELISTENER_TYPE
            value: gaia
          - name: TRACELISTENER_CHAINNAME
            value: akash
          - name: TRACELISTENER_DEBUG
            value: "true"
          - name: TRACELISTENER_USESQLGEN
            value: "true"
        image: gcr.io/tendermint-dev/emeris-tracelistener-v42:v1.6.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
    reconcilePeriod: 5m
  image:
    name: gcr.io/tendermint-dev/akash
    version: v0.14.1
  persistence:
    autoResize:
      enabled: true
      increment: 5G
      threshold: 80
    size: 15G
  replicas: 1
  moniker: emeris
  init:
    assets:
      - 10000000000000000000uakt
    bondDenom: uakt
    chainID: akash-testnet
    faucet:
      creditAmount: 10000000
      denoms:
        - uakt
      domain: faucet.akash-emeris.app.alpha.starport.cloud
      funds: 10000000000000000000000uakt
      legacySend: false
      maxCredit: 100000000
      replicas: 1
    stakeAmount: 10000000000uakt

  resources:
    validator:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 512Mi
    sentry:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 512Mi

  expose:
    domain: akash-emeris.app.alpha.starport.cloud
    grpc: true
    rpc: true
    api: true
    p2p: true