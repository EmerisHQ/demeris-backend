name: Delete Emeris Dev Environment

on: 
  workflow_dispatch:

jobs:
  redis:
    runs-on: self-hosted
    steps:
      - name: Install
        uses: WyriHaximus/github-action-helm3@v2
        with:
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          exec:
          - |
            helm install redis --namespace emeris
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo update
            helm upgrade redis \
            --install \
            --namespace emeris \
            --set auth.enabled=false \
            --set auth.sentinel=false \
            --set architecture=standalone \
            bitnami/redis

  cockroachdb:
    runs-on: self-hosted
    steps:
      - name: Install
        uses: WyriHaximus/github-action-helm3@v2
        with:
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          exec:
          - |
            helm repo add cockroachdb https://charts.cockroachdb.com/
            helm repo update
            helm upgrade cockroachdb \
            --install \
            --version 6.0.8 \
            --namespace emeris \
            --set tls.enabled=false \
            --set config.single-node=true \
            --set statefulset.replicas=3 \
            cockroachdb/cockroachdb

  ingress:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG_B64 }}
          command: apply --namespace emeris -f ci/dev/ingress.yaml

  cns-server:
    runs-on: self-hosted
    steps:
      - name: Get cns-server version
        run: |
          echo 'CNS_SERVER=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["cns-server"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-cns-server
          client-payload: '{"repo_name":"emeris-cns-server","branch_name":"main","image_name":"emeris-cns-server","image_sha":"${{ CNS_SERVER }}","service_name":"cns-server"}'

  api-server:
    runs-on: self-hosted
    steps:
      - name: Get api-server version
        run: |
          echo 'API_SERVER=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["api-server"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-api-server
          client-payload: '{"repo_name":"demeris-api-server","branch_name":"main","image_name":"emeris-api-server","image_sha":"${{ API_SERVER }}","service_name":"api-server"}'

  rpcwatcher:
    runs-on: self-hosted
    steps:
      - name: Get rpc-watcher version
        run: |
          echo 'RPC_WATCHER=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["rpcwatcher"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-emeris-rpcwatcher
          client-payload: '{"repo_name":"emeris-rpcwatcher","branch_name":"main","image_name":"emeris-rpcwatcher","image_sha":"${{ RPC_WATCHER }}","service_name":"emeris-rpcwatcher"}'

  price-oracle:
    runs-on: self-hosted
    steps:
      - name: Get price-oracle version
        run: |
          echo 'PRICE_ORACLE=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["price-oracle"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-price-oracle-server
          client-payload: '{"repo_name":"emeris-price-oracle","branch_name":"main","image_name":"emeris-price-oracle","image_sha":"${{ PRICE_ORACLE }}","service_name":"price-oracle"}'

  ticket-watcher:
    runs-on: self-hosted
    steps:
      - name: Get ticket-watcher version
        run: |
          echo 'TICKET_WATCHER=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["ticket-watcher"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-ticket-watcher
          client-payload: '{"repo_name":"emeris-ticket-watcher","branch_name":"main","image_name":"emeris-ticket-watcher","image_sha":"${{ TICKET_WATCHER }}","service_name":"ticket-watcher"}'

  daggregation:
    runs-on: self-hosted
    steps:
      - name: Get daggregation version
        run: |
          echo 'DAGGREGATION=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["daggregation"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-daggregation
          client-payload: '{"repo_name":"daggregation","branch_name":"master","image_name":"emeris-daggregation","image_sha":"${{ DAGGREGATION }}","service_name":"daggregation"}'

  dexinfo:
    runs-on: self-hosted
    steps:
      - name: Get dexinfo version
        run: |
          echo 'DEXINFO=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["dexinfo"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-dexinfo
          client-payload: '{"repo_name":"emeris-dexinfo","branch_name":"main","image_name":"emeris-dexinfo","image_sha":"${{ DEXINFO }}","service_name":"dexinfo"}'

  sdk-service-v42:
    runs-on: self-hosted
    steps:
      - name: Get sdk-service-v42 version
        run: |
          echo 'SDK_SERVICE_42=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["sdk-service-v42"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-sdk-service-v42
          client-payload: '{"repo_name":"sdk-service","branch_name":"main","image_name":"emeris-sdk-service-v42","image_sha":"${{ SDK_SERVICE_42 }}","service_name":"sdk-service-v42"}'

  sdk-service-v44:
    runs-on: self-hosted
    steps:
      - name: Get sdk-service-v44 version
        run: |
          echo 'SDK_SERVICE_44=<<EOF' >> $GITHUB_ENV
          cat ./envs/dev.json | jq '.["sdk-service-v44"]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: allinbits/demeris-backend
          event-type: dev-push-sdk-service-v44
          client-payload: '{"repo_name":"sdk-service","branch_name":"main","image_name":"emeris-sdk-service-v44","image_sha":"${{ SDK_SERVICE_44 }}","service_name":"sdk-service-v44"}'


  nodesets:
    runs-on: self-hosted
    steps:
      - name: Install nodesets
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG_B64 }}
          command: install --namespace emeris -f ./ci/dev/nodesets

  relayers:
    runs-on: self-hosted
    steps:
      - name: Install relayers
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG_B64 }}
          command: install --namespace emeris -f ./ci/dev/relayers
